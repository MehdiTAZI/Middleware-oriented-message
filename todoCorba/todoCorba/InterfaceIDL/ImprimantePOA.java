package InterfaceIDL;


/**
* InterfaceIDL/ImprimantePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Imprimante.idl
* mercredi 6 octobre 2010 13 h 35 CEST
*/

public abstract class ImprimantePOA extends org.omg.PortableServer.Servant
 implements InterfaceIDL.ImprimanteOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getInfo", new java.lang.Integer (0));
    _methods.put ("printDocument", new java.lang.Integer (1));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // InterfaceIDL/Imprimante/getInfo
       {
         org.omg.CORBA.StringHolder imprimante = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder serveur = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder hostname = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.ShortHolder tacheEnCours = new org.omg.CORBA.ShortHolder ();
         this.getInfo (imprimante, serveur, hostname, tacheEnCours);
         out = $rh.createReply();
         out.write_string (imprimante.value);
         out.write_string (serveur.value);
         out.write_string (hostname.value);
         out.write_short (tacheEnCours.value);
         break;
       }

       case 1:  // InterfaceIDL/Imprimante/printDocument
       {
         try {
           String nomFichier = in.read_string ();
           org.omg.CORBA.IntHolder nbOctets = new org.omg.CORBA.IntHolder ();
           short $result = (short)0;
           $result = this.printDocument (nomFichier, nbOctets);
           out = $rh.createReply();
           out.write_short ($result);
           out.write_long (nbOctets.value);
         } catch (InterfaceIDL.TacheRefusee $ex) {
           out = $rh.createExceptionReply ();
           InterfaceIDL.TacheRefuseeHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:InterfaceIDL/Imprimante:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Imprimante _this() 
  {
    return ImprimanteHelper.narrow(
    super._this_object());
  }

  public Imprimante _this(org.omg.CORBA.ORB orb) 
  {
    return ImprimanteHelper.narrow(
    super._this_object(orb));
  }


} // class ImprimantePOA
