module monitoring {
    
     struct Message{
     	string time;
     	string code;
     	string type;
     	string data;
     };
     typedef sequence<Message> Messages;
       
     struct ChannelInfosCollector{
   	 string topic;							//Titre
   	 long capacity;							//Capacité
   	 long nbQueueEvents;					//nombre Events in the queue
   	 long consumersConnected;				//Connecté
   	 long consumersSubscribed;				//Consumer Abonné
   	 long suppliersConnected;				//Connecté
   	 Messages messages;
    };
    
   	typedef sequence<ChannelInfoscollector> ChannelsInfos;   
   
    interface CosInfoCollector{
   	 	ChannelsInfos getChannelsInfos();   	 	
    };
};


    /*
    typedef sequence<Event> Events;//Sur le fichier cosEvent.idl
    
	struct ConsumerInfosCollector{
  
	struct PushConsumerStat{
   	 string id;
   	 boolean connected;
   	 long nbQueueEvents;					//Nombre evenemnt dans la queue
   	 long nbReceivedEvents;					//Nombre Evenement envoyé
    };

    
    struct PushSupplierStat{
   	 string id;								//Qui a envoyé?
   	 long pushedEvents;						//Nombre Events Envoyé
    };
    
    struct ChannelInfosCollector{
   	 string topic;							//Titre
   	 long capacity;							//Capacité
   	 long nbQueueEvents;					//nombre Events in the queue
   	 sequence<PushConsumerStat> consumers;	//Connecté et abonnée
   	 sequence<PushSupplierStat> suppliers;	//Connecté
    };
       */